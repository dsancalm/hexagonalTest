openapi: 3.0.3
info:
  title: Prueba tecnica
  version: 1.0.0
tags:
  - name: Coches
  - name: Extras
  - name: Marcas
  - name: Precios
paths:
  /coches:
    get:
      tags:
        - Coches
      summary: Recupera todos los coches disponibles
      description: Recupera todos los coches disponibles en el sistema
      operationId: findAllCoches
      security:
        - basicAuth: []
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CocheResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
    post:
      tags:
        - Coches
      summary: Inserta un coche en el sistema
      description: Inserta un coche en el sistema
      operationId: insertCoche
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocheRequest'
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CocheResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
    put:
      tags:
        - Coches
      summary: Actualiza un coche en el sistema
      description: Actualiza un coche en el sistema
      operationId: updateCoche
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocheRequest'
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CocheResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Not found
        '500':
          description: Internal server error
  /coches/{id}:
    delete:
      tags:
        - Coches
      summary: Borra un coche en el sistema
      description: Borra un coche en el sistema
      operationId: deleteCoche
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: id del coche a borrar
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operacion con exito
        '400':
          description: Id del coche no valido
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
  /extras:
    get:
      tags:
        - Extras
      summary: Recupera todos los extras disponibles
      description: Recupera todos los extras disponibles en el sistema
      operationId: findAllExtras
      security:
        - basicAuth: []
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtraResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
    post:
      tags:
        - Extras
      summary: Inserta un extra en el sistema
      description: Inserta un extra en el sistema
      operationId: insertExtra
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraRequest'
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
    put:
      tags:
        - Extras
      summary: Actualiza un extra en el sistema
      description: Actualiza un extra en el sistema
      operationId: updateExtra
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraRequest'
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Not found
        '500':
          description: Internal server error
  /extras/{id}:
    delete:
      tags:
        - Extras
      summary: Borra un extra en el sistema
      description: Borra un extra en el sistema
      operationId: deleteExtra
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: id del extra a borrar
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operacion con exito
        '400':
          description: Id del extra no valido
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
  /precios:
    get:
      tags:
        - Precios
      summary: Recupera todos los precios disponibles
      description: Recupera todos los precios disponibles en el sistema
      operationId: findAllPrecios
      security:
        - basicAuth: []
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrecioResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
    post:
      tags:
        - Precios
      summary: Inserta un precio en el sistema
      description: Inserta un precio en el sistema
      operationId: insertPrecio
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecioRequest'
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrecioResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
    put:
      tags:
        - Precios
      summary: Actualiza un precio en el sistema
      description: Actualiza un precio en el sistema
      operationId: updatePrecio
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecioRequest'
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrecioResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Not found
        '500':
          description: Internal server error
  /precios/{id}:
    delete:
      tags:
        - Precios
      summary: Borra un precio en el sistema
      description: Borra un precio en el sistema
      operationId: deletePrecio
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: id del precio a borrar
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operacion con exito
        '400':
          description: Id del precio no valido
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
  /marcas:
    get:
      tags:
        - Marcas
      summary: Recupera todos los marcas disponibles
      description: Recupera todos los marcas disponibles en el sistema
      operationId: findAllMarcas
      security:
        - basicAuth: []
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarcaResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
    post:
      tags:
        - Marcas
      summary: Inserta un marca en el sistema
      description: Inserta un marca en el sistema
      operationId: insertMarca
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarcaRequest'
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarcaResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
    put:
      tags:
        - Marcas
      summary: Actualiza un marca en el sistema
      description: Actualiza un marca en el sistema
      operationId: updateMarca
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarcaRequest'
      responses:
        '200':
          description: Operacion con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarcaResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Not found
        '500':
          description: Internal server error
  /marcas/{id}:
    delete:
      tags:
        - Marcas
      summary: Borra un marca en el sistema
      description: Borra un marca en el sistema
      operationId: deleteMarca
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: id del marca a borrar
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Operacion con exito
        '400':
          description: Id del marca no valido
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Internal server error
components:
  schemas:
    PrecioRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        precio:
          type: number
          format : float
        coche:
          $ref: '#/components/schemas/CocheRequest'
    PrecioResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        precio:
          type: number
          format : float
    MarcaRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
    MarcaResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        coches:
          type: array
          items:
            $ref: '#/components/schemas/CocheResponse'
    ExtraRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        coche:
          $ref: '#/components/schemas/CocheRequest'
    ExtraResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
    CocheRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        modelo:
          type: string
        color:
          type: string
        cilindrada:
          type: integer
          format: int32
        potencia:
          type: integer
          format: int32
        marca:
          $ref: '#/components/schemas/MarcaRequest'
    CocheResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        modelo:
          type: string
        color:
          type: string
        cilindrada:
          type: integer
          format: int32
        potencia:
          type: integer
          format: int32
        extras:
          type: string
        precios:
          type: array
          items:
            $ref: '#/components/schemas/PrecioResponse'
        marca:
          $ref: '#/components/schemas/MarcaResponse'
  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: Autenticacion incorrecta
      headers:
        WWW_Authenticate:
          schema:
            type: string
